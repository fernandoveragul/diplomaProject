version: '3'

services:

#  web:
#    container_name: web
#    image: nginx
#    restart: always
#    ports:
#      - "80:80"
#      - "443:443"
#    depends_on:
#      - frontend
#    volumes:
#      - ./services/nginx/nginx-setup.conf:/etc/nginx/conf.d/default.conf:ro
#      - /usr/app/frontend:/var/www/frontend

#  cerbot:
#    image: cerbot/cerbot

  backend:
    container_name: backend
    build:
      context: ./services/backend
    restart: always
    volumes:
      - ./services/backend:/usr/app/backend
    ports:
      - "10000:8000"
    depends_on:
      - database
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

#  frontend:
#    container_name: frontend
#    build:
#      context: ./services/frontend
#    restart: always
#    volumes:
#      - ./services/frontend/dist:/usr/app/frontend
#    networks:
#      - common
#    depends_on:
#      - backend

  database:
    container_name: db
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
      PGDATA: /var/lib/postgresql/data/pgdata
    ports:
      - "${DB_PORT}:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    command:
      - "postgres"
      - "-c"
      - "max_connections=50"
      - "-c"
      - "shared_buffers=1GB"
      - "-c"
      - "effective_cache_size=4GB"
      - "-c"
      - "work_mem=16MB"
      - "-c"
      - "maintenance_work_mem=512MB"
      - "-c"
      - "random_page_cost=1.1"
      - "-c"
      - "temp_file_limit=10GB"
      - "-c"
      - "log_min_duration_statement=200ms"
      - "-c"
      - "idle_in_transaction_session_timeout=10s"
      - "-c"
      - "lock_timeout=1s"
      - "-c"
      - "statement_timeout=60s"
      - "-c"
      - "shared_preload_libraries=pg_stat_statements"
      - "-c"
      - "pg_stat_statements.max=10000"
      - "-c"
      - "pg_stat_statements.track=all"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U habrpguser -d habrdb"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4G

  pgadmin:
    container_name: db_admin
    image: dpage/pgadmin4
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"

volume:
  db_data: